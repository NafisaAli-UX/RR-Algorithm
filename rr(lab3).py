# -*- coding: utf-8 -*-
"""RR(Lab3).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A_-PMyU7ayxsdZY1ZSyJaYZmRv1g5DjV
"""

n = int(input("Enter number of processes: "))
pname = []
arrival = []
burst = []

for i in range(n):
    pname.append(input("Enter process name: "))
    arrival.append(int(input("Enter arrival time: ")))
    burst.append(int(input("Enter burst time: ")))

quantum = int(input("Enter time quantum: "))

remaining = burst[:]
complete = [0] * n
ct = [0] * n
time = 0
done = 0
queue = []
visited = [False] * n

while done < n:
    for i in range(n):
        if arrival[i] <= time and not visited[i] and remaining[i] > 0:
            queue.append(i)
            visited[i] = True

    if not queue:
        time += 1
        continue

    current = queue.pop(0)

    if remaining[current] > quantum:
        time += quantum
        remaining[current] -= quantum
    else:
        time += remaining[current]
        ct[current] = time
        remaining[current] = 0
        complete[current] = 1
        done += 1

    for i in range(n):
        if arrival[i] <= time and not visited[i] and remaining[i] > 0:
            queue.append(i)
            visited[i] = True

    if remaining[current] > 0:
        queue.append(current)

tat = [0]*n
wt = [0]*n

for i in range(n):
    tat[i] = ct[i] - arrival[i]
    wt[i] = tat[i] - burst[i]

print("\nProcess\tAT\tBT\tCT\tTAT\tWT")
for i in range(n):
    print(pname[i], "\t", arrival[i], "\t", burst[i], "\t", ct[i], "\t", tat[i], "\t", wt[i])